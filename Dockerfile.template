#FROM resin/%%RESIN_MACHINE_NAME%%-python:2.7
FROM resin/%%RESIN_MACHINE_NAME%%-node:6

# -- Start of revised resin-wifi-connect section -- #
#FROM resin/%%RESIN_MACHINE_NAME%%-debian

ENV INITSYSTEM on

RUN apt-get update \
    && apt-get install -y dnsmasq \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /usr/src/app/

WORKDIR /usr/src/app

RUN curl https://api.github.com/repos/resin-io/resin-wifi-connect/releases/latest -s \
    | grep -hoP 'browser_download_url": "\K.*%%RESIN_ARCH%%\.tar\.gz' \
    | xargs -n1 curl -Ls \
    | tar -xvz -C /usr/src/app/

COPY start.sh .

# -- End of revised resin-wifi-connect section -- #



# -- Start of myConnectedFrame section -- #
# Install other apt deps
RUN apt-get update && apt-get install -y \
  xserver-xorg-core \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  xorg \
  fluxbox \
  python-imaging-tk \
  unzip \
  cron && rm -rf /var/lib/apt/lists/*

# Set Xorg and FLUXBOX preferences
RUN mkdir ~/.fluxbox
RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Defines our working directory in container
#WORKDIR /usr/src/app # defined above

# Copies the package.json first for better cache on later pushes
COPY package.json package.json

# This install npm dependencies on the resin.io build server,
# making sure to clean up the artifacts it creates in order to reduce the image size.
RUN JOBS=MAX npm install --production --unsafe-perm && npm cache clean && rm -rf /tmp/*

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable systemd init system in container
#ENV INITSYSTEM on # defined above

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
